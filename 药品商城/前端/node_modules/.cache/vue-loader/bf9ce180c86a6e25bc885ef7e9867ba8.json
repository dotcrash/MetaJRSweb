{"remainingRequest":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\HBuilderX软件\\Project\\brainHealth\\src\\views\\user\\updatePass\\updatePass.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\src\\views\\user\\updatePass\\updatePass.vue","mtime":1634182984000},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js","mtime":1652873271922},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js","mtime":1652873270400}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { updatePassRule } from \"@/utils/rules\";\nimport { updatePassApi } from \"@/api/api\";\nexport default {\n  name: \"updatePass\",\n  data() {\n    return {\n      ruleForm: {\n        oldpass: \"\",\n        newpass: \"\",\n        okpass: \"\",\n        _id: JSON.parse(localStorage.getItem(\"id\")),\n      },\n      updatePassRule: updatePassRule,\n    };\n  },\n  methods: {\n    async updatePass() {\n      this.$refs.ruleForm.validate(async (valid) => {\n        if (valid) {\n          if (this.ruleForm.newpass === this.ruleForm.okpass) {\n            const res = updatePassApi(this.ruleForm);\n            if (res) {\n              this.$utils.elMessageBox(\"修改密码成功,请重新登录\", \"success\", 500);\n              setTimeout(() => {\n                this.$router.push(\"/login\");\n                localStorage.clear();\n              }, 700);\n            }\n          }\n        }\n      });\n    },\n  },\n  computed: {\n    nickname() {\n      return this.$store.getters.getUser.nickname;\n    },\n  },\n};\n",{"version":3,"sources":["updatePass.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"updatePass.vue","sourceRoot":"src/views/user/updatePass","sourcesContent":["<template>\n  <div class=\"password-box\">\n    <div class=\"update-password\">\n      <div class=\"input-item nickname\">\n        <p>用户名</p>\n        <el-input v-model=\"nickname\" disabled></el-input>\n      </div>\n      <el-form class=\"ruleForm-box\" ref=\"ruleForm\" :model=\"ruleForm\" :rules=\"updatePassRule\" label-width=\"0\" label-position=\"left\">\n        <el-form-item prop=\"oldpass\">\n          <div class=\"input-item\">\n            <p>旧密码</p>\n            <el-input v-model=\"ruleForm.oldpass\" show-password placeholder=\"请输入旧密码\"></el-input>\n          </div>\n        </el-form-item>\n        <el-form-item prop=\"newpass\">\n          <div class=\"input-item\">\n            <p>新密码</p>\n            <el-input v-model=\"ruleForm.newpass\" show-password placeholder=\"请输入新密码\"></el-input>\n          </div>\n        </el-form-item>\n        <el-form-item prop=\"okpass\">\n          <div class=\"input-item\">\n            <p>确认密码</p>\n            <el-input v-model=\"ruleForm.okpass\" show-password placeholder=\"请再次输入新密码\"></el-input>\n          </div>\n        </el-form-item>\n        <div class=\"input-item confirm-btn\">\n          <el-button type=\"primary\" @click=\"updatePass\">确 定</el-button>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { updatePassRule } from \"@/utils/rules\";\nimport { updatePassApi } from \"@/api/api\";\nexport default {\n  name: \"updatePass\",\n  data() {\n    return {\n      ruleForm: {\n        oldpass: \"\",\n        newpass: \"\",\n        okpass: \"\",\n        _id: JSON.parse(localStorage.getItem(\"id\")),\n      },\n      updatePassRule: updatePassRule,\n    };\n  },\n  methods: {\n    async updatePass() {\n      this.$refs.ruleForm.validate(async (valid) => {\n        if (valid) {\n          if (this.ruleForm.newpass === this.ruleForm.okpass) {\n            const res = updatePassApi(this.ruleForm);\n            if (res) {\n              this.$utils.elMessageBox(\"修改密码成功,请重新登录\", \"success\", 500);\n              setTimeout(() => {\n                this.$router.push(\"/login\");\n                localStorage.clear();\n              }, 700);\n            }\n          }\n        }\n      });\n    },\n  },\n  computed: {\n    nickname() {\n      return this.$store.getters.getUser.nickname;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n.password-box {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .update-password {\n    width: 1000px;\n    box-shadow: 0 0px 30px 3px #aaa;\n    height: 500px;\n    margin-top: 20px;\n    padding-top: 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    .input-item {\n      display: flex;\n      height: 80px;\n      align-items: center;\n      p {\n        width: 100px;\n        font-weight: 550;\n      }\n      .el-input {\n        width: 500px;\n      }\n    }\n    .nickname {\n      p {\n        font-size: 14px;\n      }\n    }\n    .input-item:nth-child(4) {\n      .el-button {\n        padding: 15px 50px;\n        font-size: 16px;\n        letter-spacing: 5px;\n      }\n    }\n    .confirm-btn {\n      justify-content: center;\n    }\n  }\n  /deep/.el-form-item__content {\n    .el-form-item__error {\n      position: absolute;\n      font-size: 14px;\n      top: 65px;\n      left: 100px;\n    }\n  }\n}\n</style>"]}]}