{"remainingRequest":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\HBuilderX软件\\Project\\brainHealth\\src\\views\\article\\sendArticle\\sendArticle.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\src\\views\\article\\sendArticle\\sendArticle.vue","mtime":1634182984000},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js","mtime":1652873271922},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js","mtime":1652873270400}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport E from \"wangeditor\";\nimport { articleSendApi, articleUpdate, getOneArticleInfo, deleteImg, uploadArticleImgApi } from \"@/api/api\";\nexport default {\n  name: \"sendArticle\",\n  data() {\n    return {\n      form: {\n        //标题\n        title: \"\",\n        //展示部分内容\n        contentText: \"\",\n        //详情全部内容\n        contentHtml: \"\",\n        //用户id\n        userId: this.userId,\n        //图片\n        articleImgs: [],\n      },\n      beforeArticleImgs: [],\n      editor: null,\n      showBtn: true,\n      isUpdate: this.$route.name == \"UpdateArticle\",\n      isNext: true,\n    };\n  },\n\n  //跳转路由前判断是否继续编辑文章\n  beforeRouteLeave(to, from, next) {\n    //路由跳转到哪里\n    if (!this.isNext) return next();\n    //点击退出登录\n    if (this.$store.getters.getReadyLoginOut) {\n      this.$store.commit(\"setReadyLoginOut\", false);\n      this.outDelArticleImgs();\n      return next();\n    }\n    if (this.form.title || this.editor.txt.html()) {\n      this.$confirm(\"你在当前页面已经编辑了文章信息，离开当前页面将会丢失该页面的任何信息。是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          this.outDelArticleImgs();\n          next();\n        })\n        .catch(() => {\n          return false;\n        });\n    } else {\n      next();\n    }\n  },\n  mounted() {\n    this.initEditor();\n    this.getUpdateForm();\n  },\n  computed: {\n    userId() {\n      return this.$store.getters.getUser._id;\n    },\n    token() {\n      return this.$store.getters.getToken;\n    },\n  },\n  methods: {\n    //创建wangEditor富文本编辑器\n    initEditor() {\n      this.editor = new E(\"#editor\");\n      // 设置编辑区域高度\n      this.editor.config.height = 640;\n      //改变默认的z-index\n      this.editor.config.zIndex = 500;\n      this.editor.config.placeholder = \"请输入文章内容\";\n      // 配置菜单栏，设置不需要的菜单\n      this.editor.config.excludeMenus = [\"video\"];\n      // 配置颜色（文字颜色、背景色）\n      this.editor.config.colors = [\"#ffffff\", \"#ff0000\", \"#ff9900\", \"#ffff00\", \"#00ff00\", \"#009933\", \"#3399ff\", \"#0000ff\", \"#000000\", \"#bf4080\", \"#00ffaa\", \"#ff3399\"];\n      // 配置行高\n      this.editor.config.lineHeights = [\"1\", \"1.2\", \"1.5\", \"2\", \"2.5\", \"3\"];\n      //来关闭样式过滤\n      this.editor.config.pasteFilterStyle = false;\n      this.editor.config.pasteIgnoreImg = false;\n      //隐藏网络图片\n      this.editor.config.showLinkImg = false;\n      // 上传超时时间\n      this.editor.config.uploadImgTimeout = 15 * 1000;\n      // 当次最多上传图片个数\n      this.editor.config.uploadImgMaxLength = 5;\n      // 图片大小最大为2M\n      this.editor.config.uploadImgMaxSize = 2 * 1024 * 1024; // 2M\n\n      // resultFiles 是 input 中选中的文件列表; insertImgFn 是获取图片 url 后，插入到编辑器的方法\n      this.editor.config.customUploadImg = async (resultFiles, insertImgFn) => {\n        const formData = new FormData();\n        resultFiles.forEach(async (item) => {\n          formData.append(\"articleImg\", item);\n        });\n        const res = await uploadArticleImgApi(formData);\n        if (res.code === 200) {\n          res.data.forEach((item) => {\n            insertImgFn(item);\n            this.form.articleImgs.push(item);\n          });\n        }\n      };\n\n      this.editor.create();\n    },\n    async getUpdateForm() {\n      if (this.isUpdate) {\n        const { id } = this.$route.params;\n        const res = await getOneArticleInfo({ id });\n        if (res.code === 200) {\n          this.form.contentHtml = res.data.contentHtml;\n          this.form.title = res.data.title;\n          this.beforeArticleImgs = JSON.parse(JSON.stringify(res.data.articleImgs));\n          this.form.articleImgs = res.data.articleImgs;\n          this.form.id = id;\n          this.editor.txt.html(this.form.contentHtml);\n        }\n      }\n    },\n    //点击发表文章\n    async sendArticleEvent() {\n      const html = this.editor.txt.html();\n      this.form.articleImgs.forEach(async (item) => {\n        if (!html.includes(item)) {\n          this.form.articleImgs = this.form.articleImgs.filter((value) => value !== item);\n          await deleteImg({ url: item });\n        }\n      });\n      this.isNext = false;\n      this.form.userId = this.userId;\n      this.form.contentText = this.editor.txt.text().slice(0, 120);\n      this.form.contentHtml = html;\n      if (!this.form.title || !this.form.contentHtml) {\n        return this.$utils.elMessageBox(\"请输入文章标题或内容\", \"warning\");\n      }\n      if (this.isUpdate) {\n        await articleUpdate(this.form);\n        this.$utils.elMessageBox(\"修改文章成功\", \"success\", 500);\n        setTimeout(() => {\n          this.$router.push(`/article/details/${this.form.id}`);\n        }, 700);\n      } else {\n        await articleSendApi(this.form);\n        this.$router.push(\"/\");\n      }\n    },\n    outDelArticleImgs() {\n      if (!this.beforeArticleImgs.length) {\n        this.form.articleImgs.forEach(async (item) => {\n          await deleteImg({ url: item });\n        });\n      } else if (JSON.stringify(this.form.articleImgs) !== JSON.stringify(this.beforeArticleImgs)) {\n        this.form.articleImgs.forEach(async (item) => {\n          if (!this.beforeArticleImgs.some((value) => value === item)) {\n            await deleteImg({ url: item });\n          }\n        });\n      }\n    },\n  },\n  beforeDestroy() {\n    // 销毁编辑器\n    this.editor.destroy();\n    this.editor = null;\n    this.form = null;\n  },\n};\n",{"version":3,"sources":["sendArticle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"sendArticle.vue","sourceRoot":"src/views/article/sendArticle","sourcesContent":["<template>\n  <div class=\"send-article-box\">\n    <div class=\"send-article\">\n      <div class=\"article-main\">\n        <div class=\"article-box btn-box\">\n          <el-input v-model=\"form.title\" placeholder=\"请输入文章标题\" maxlength=\"88\"></el-input>\n          <el-button type=\"primary\" @click=\"sendArticleEvent\">{{ isUpdate ? \"修改文章\" : \"发表文章\" }}</el-button>\n        </div>\n        <div class=\"article-box\">\n          <div class=\"con-l\" id=\"editor\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport E from \"wangeditor\";\nimport { articleSendApi, articleUpdate, getOneArticleInfo, deleteImg, uploadArticleImgApi } from \"@/api/api\";\nexport default {\n  name: \"sendArticle\",\n  data() {\n    return {\n      form: {\n        //标题\n        title: \"\",\n        //展示部分内容\n        contentText: \"\",\n        //详情全部内容\n        contentHtml: \"\",\n        //用户id\n        userId: this.userId,\n        //图片\n        articleImgs: [],\n      },\n      beforeArticleImgs: [],\n      editor: null,\n      showBtn: true,\n      isUpdate: this.$route.name == \"UpdateArticle\",\n      isNext: true,\n    };\n  },\n\n  //跳转路由前判断是否继续编辑文章\n  beforeRouteLeave(to, from, next) {\n    //路由跳转到哪里\n    if (!this.isNext) return next();\n    //点击退出登录\n    if (this.$store.getters.getReadyLoginOut) {\n      this.$store.commit(\"setReadyLoginOut\", false);\n      this.outDelArticleImgs();\n      return next();\n    }\n    if (this.form.title || this.editor.txt.html()) {\n      this.$confirm(\"你在当前页面已经编辑了文章信息，离开当前页面将会丢失该页面的任何信息。是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          this.outDelArticleImgs();\n          next();\n        })\n        .catch(() => {\n          return false;\n        });\n    } else {\n      next();\n    }\n  },\n  mounted() {\n    this.initEditor();\n    this.getUpdateForm();\n  },\n  computed: {\n    userId() {\n      return this.$store.getters.getUser._id;\n    },\n    token() {\n      return this.$store.getters.getToken;\n    },\n  },\n  methods: {\n    //创建wangEditor富文本编辑器\n    initEditor() {\n      this.editor = new E(\"#editor\");\n      // 设置编辑区域高度\n      this.editor.config.height = 640;\n      //改变默认的z-index\n      this.editor.config.zIndex = 500;\n      this.editor.config.placeholder = \"请输入文章内容\";\n      // 配置菜单栏，设置不需要的菜单\n      this.editor.config.excludeMenus = [\"video\"];\n      // 配置颜色（文字颜色、背景色）\n      this.editor.config.colors = [\"#ffffff\", \"#ff0000\", \"#ff9900\", \"#ffff00\", \"#00ff00\", \"#009933\", \"#3399ff\", \"#0000ff\", \"#000000\", \"#bf4080\", \"#00ffaa\", \"#ff3399\"];\n      // 配置行高\n      this.editor.config.lineHeights = [\"1\", \"1.2\", \"1.5\", \"2\", \"2.5\", \"3\"];\n      //来关闭样式过滤\n      this.editor.config.pasteFilterStyle = false;\n      this.editor.config.pasteIgnoreImg = false;\n      //隐藏网络图片\n      this.editor.config.showLinkImg = false;\n      // 上传超时时间\n      this.editor.config.uploadImgTimeout = 15 * 1000;\n      // 当次最多上传图片个数\n      this.editor.config.uploadImgMaxLength = 5;\n      // 图片大小最大为2M\n      this.editor.config.uploadImgMaxSize = 2 * 1024 * 1024; // 2M\n\n      // resultFiles 是 input 中选中的文件列表; insertImgFn 是获取图片 url 后，插入到编辑器的方法\n      this.editor.config.customUploadImg = async (resultFiles, insertImgFn) => {\n        const formData = new FormData();\n        resultFiles.forEach(async (item) => {\n          formData.append(\"articleImg\", item);\n        });\n        const res = await uploadArticleImgApi(formData);\n        if (res.code === 200) {\n          res.data.forEach((item) => {\n            insertImgFn(item);\n            this.form.articleImgs.push(item);\n          });\n        }\n      };\n\n      this.editor.create();\n    },\n    async getUpdateForm() {\n      if (this.isUpdate) {\n        const { id } = this.$route.params;\n        const res = await getOneArticleInfo({ id });\n        if (res.code === 200) {\n          this.form.contentHtml = res.data.contentHtml;\n          this.form.title = res.data.title;\n          this.beforeArticleImgs = JSON.parse(JSON.stringify(res.data.articleImgs));\n          this.form.articleImgs = res.data.articleImgs;\n          this.form.id = id;\n          this.editor.txt.html(this.form.contentHtml);\n        }\n      }\n    },\n    //点击发表文章\n    async sendArticleEvent() {\n      const html = this.editor.txt.html();\n      this.form.articleImgs.forEach(async (item) => {\n        if (!html.includes(item)) {\n          this.form.articleImgs = this.form.articleImgs.filter((value) => value !== item);\n          await deleteImg({ url: item });\n        }\n      });\n      this.isNext = false;\n      this.form.userId = this.userId;\n      this.form.contentText = this.editor.txt.text().slice(0, 120);\n      this.form.contentHtml = html;\n      if (!this.form.title || !this.form.contentHtml) {\n        return this.$utils.elMessageBox(\"请输入文章标题或内容\", \"warning\");\n      }\n      if (this.isUpdate) {\n        await articleUpdate(this.form);\n        this.$utils.elMessageBox(\"修改文章成功\", \"success\", 500);\n        setTimeout(() => {\n          this.$router.push(`/article/details/${this.form.id}`);\n        }, 700);\n      } else {\n        await articleSendApi(this.form);\n        this.$router.push(\"/\");\n      }\n    },\n    outDelArticleImgs() {\n      if (!this.beforeArticleImgs.length) {\n        this.form.articleImgs.forEach(async (item) => {\n          await deleteImg({ url: item });\n        });\n      } else if (JSON.stringify(this.form.articleImgs) !== JSON.stringify(this.beforeArticleImgs)) {\n        this.form.articleImgs.forEach(async (item) => {\n          if (!this.beforeArticleImgs.some((value) => value === item)) {\n            await deleteImg({ url: item });\n          }\n        });\n      }\n    },\n  },\n  beforeDestroy() {\n    // 销毁编辑器\n    this.editor.destroy();\n    this.editor = null;\n    this.form = null;\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n.send-article-box {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n}\n.send-article {\n  border-radius: 10px;\n  width: 1080px;\n  margin-top: 20px;\n  padding: 0 15px;\n  box-shadow: 0 0px 30px 3px #aaa;\n  // display: flex;\n  // flex-direction: column;\n  // align-items: center;\n\n  .article-main {\n    margin-bottom: 10px;\n    // width: 1000px;\n    // height: 560px;\n  }\n  // .column{\n  //   display: flex;\n  //   flex-direction: column;\n  // }\n  .article-box {\n    text-align: left;\n    margin-top: 10px;\n\n    .el-input ::v-deep {\n      position: static;\n\n      .el-input__inner {\n        border-radius: 10px;\n      }\n    }\n    .el-textarea ::v-deep {\n      margin-top: 10px;\n      position: static;\n\n      .el-textarea__inner {\n        border-radius: 10px;\n      }\n    }\n    // label{\n    //   font-size: 20px;\n    //   letter-spacing: 5px;\n    //   font-weight: 520;\n    //   width: 60px;\n    // }\n  }\n\n  // .article-box:nth-child(2){\n  //   width: 1200px;\n  // .con-l{\n  //   display: flex;\n  //   width: 960px;\n  // }\n\n  //   .con-r{\n  //     position: relative;\n  //     right: 0;\n  //     top: -97px;\n  //     height: 190px;\n  //     border-radius: 7px;\n  //     box-shadow: 0 0px 30px 3px #AAA;\n  //     margin-left: 30px;\n  //     width: 190px;\n  //   }\n  // }\n\n  // .con-r ::v-deep{\n  //   .el-upload-dragger{\n  //     width: 190px;\n  //     height: 190px;\n  //     border: 1px solid #d9d9d9;\n  //     position: static;\n  //   }\n  //   .el-upload-dragger:hover{\n  //     border: 1px solid #409EFF;\n  //   }\n  // }\n\n  .btn-box {\n    display: flex;\n    align-items: center;\n    .el-button {\n      margin-left: 10px;\n      border-radius: 10px;\n      padding: 12px 8px;\n      letter-spacing: 5px;\n    }\n  }\n\n  .el-button--danger {\n    color: #fff;\n    border: 1px solid #0099ff;\n    background-color: #0099ff;\n\n    &:hover {\n      border: 1px solid #015bf1;\n      background-color: #015bf1;\n    }\n  }\n}\n/deep/ .w-e-toolbar {\n  border-top-left-radius: 10px !important;\n  border-top-right-radius: 10px !important;\n}\n/deep/ .w-e-text-container {\n  border-bottom-left-radius: 10px !important;\n  border-bottom-right-radius: 10px !important;\n}\n</style>"]}]}