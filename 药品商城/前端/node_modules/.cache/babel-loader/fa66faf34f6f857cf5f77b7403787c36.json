{"remainingRequest":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js!F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\HBuilderX软件\\Project\\brainHealth\\src\\views\\article\\articleDetails\\components\\getComment.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\src\\views\\article\\articleDetails\\components\\getComment.vue","mtime":1652352151593},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js","mtime":1652873271922},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js","mtime":1652873270400}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\HBuilderX\\u8F6F\\u4EF6\\\\Project\\\\brainHealth\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { commentGetApi, commentAddApi, commentDelete } from \"@/api/api\";\nexport default {\n  name: \"getComment\",\n  data: function data() {\n    return {\n      showOneComment: -1,\n      //确定回复输入框的插入位置\n      showBtn: false,\n      //显示评论输入框\n      showChildComment: \"\",\n      commentArticle: \"\",\n      total: 10,\n      nowPage: 1,\n      isMe: this.$utils.getUserId(),\n      allCommentData: [{\n        \"fromUserId\": {\n          \"_id\": 1,\n          \"nickname\": \"爱开发的小罗\",\n          \"avatar\": \"/static/img/avatar/1.jpg\"\n        },\n        \"content\": \"祝他早日康复！\"\n      }, {\n        \"fromUserId\": {\n          \"_id\": 2,\n          \"nickname\": \"爱开发的小罗\",\n          \"avatar\": \"/static/img/avatar/2.jpg\"\n        },\n        \"content\": \"我爷爷也是这病，现在还处于治疗中，真让我担心。\"\n      }],\n      commentForm: {\n        articleId: this.$route.params.id,\n        content: \"\",\n        parentId: \"\",\n        commentGrade: \"\",\n        fromUserId: this.$utils.getUserId(),\n        toUserId: \"\"\n      },\n      form: {\n        articleId: this.$route.params.id,\n        sortStatus: -1,\n        pageNum: 1\n      },\n      ifLogin: true\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getData();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  mounted: function mounted() {},\n  methods: {\n    //获取所有评论\n    getData: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }(),\n    //点击某一页时，currentpage为页码\n    currentChange: function currentChange(currentpage) {\n      this.form.pageNum = currentpage;\n      this.getData();\n    },\n    //点击回复————回复一级评论\n    goReplyOneComment: function goReplyOneComment(index, userInfo) {\n      if (this.getToken) {\n        //清除评论文章的内容\n        this.commentArticle = \"\"; //清除评论内容\n\n        this.commentForm.content = \"\"; //评论id\n\n        this.commentForm.parentId = this.allCommentData[index]._id; //被回复人id\n\n        this.commentForm.toUserId = userInfo._id; //评论类型\n\n        this.commentForm.commentGrade = \"2\"; //关闭评论输入框\n\n        this.showBtn = false; //对应位置插入回复框\n\n        this.showOneComment = index;\n        this.showChildComment = \"\";\n      } else {\n        this.$utils.elMessageBox(\"您还未登录，请登录后再试！！！\", \"error\");\n      }\n    },\n    //点击评论文章输入框\n    commentInputFocus: function commentInputFocus() {\n      if (this.getToken) {\n        this.commentForm.content = \"\";\n        this.showOneComment = -1;\n        this.showBtn = true;\n        this.showChildComment = \"\";\n      } else {\n        this.$utils.elMessageBox(\"您还未登录，请登录后再试！！！\", \"error\");\n      }\n    },\n    //取消评论\n    cancelComment: function cancelComment() {\n      this.showBtn = false;\n      this.commentArticle = \"\";\n    },\n    //取消回复\n    cancelReplyOneComment: function cancelReplyOneComment() {\n      this.commentForm.content = \"\";\n      this.showOneComment = -1;\n      this.showChildComment = \"\";\n    },\n    //添加评论\n    sendComment: function () {\n      var _sendComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.getToken) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                this.commentForm.content = this.commentArticle;\n                this.commentForm.toUserId = this.$utils.getUserId();\n                this.commentForm.commentGrade = \"1\";\n                _context3.next = 6;\n                return commentAddApi(this.commentForm);\n\n              case 6:\n                res = _context3.sent;\n\n                if (res.code === 200) {\n                  this.getData();\n                  this.commentForm.content = \"\";\n                  this.commentArticle = \"\";\n                  this.showBtn = false;\n                  this.$utils.elMessageBox(\"评论成功\", \"success\");\n                  this.$emit(\"commentNumAdd\");\n                }\n\n                _context3.next = 11;\n                break;\n\n              case 10:\n                this.$utils.elMessageBox(\"请登录后再发表评论\", \"error\");\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function sendComment() {\n        return _sendComment.apply(this, arguments);\n      }\n\n      return sendComment;\n    }(),\n    sendReply: function () {\n      var _sendReply = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.getToken) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                _context4.next = 3;\n                return commentAddApi(this.commentForm);\n\n              case 3:\n                res = _context4.sent;\n\n                if (res.code == 200) {\n                  this.$utils.elMessageBox(\"回复成功\", \"success\");\n                  this.$emit(\"commentNumAdd\");\n                  this.showChildComment = \"\";\n                  this.showOneComment = -1;\n                  this.commentForm.content = \"\";\n                  this.getData();\n                }\n\n                _context4.next = 8;\n                break;\n\n              case 7:\n                this.$utils.elMessageBox(\"请登录后再进行回复操作\", \"error\");\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function sendReply() {\n        return _sendReply.apply(this, arguments);\n      }\n\n      return sendReply;\n    }(),\n    deleteFormId: function deleteFormId(deleteData) {\n      var deleteForm = [];\n      deleteForm.push({\n        _id: deleteData._id\n      });\n\n      if (deleteData.secondComment.length) {\n        deleteData.secondComment.forEach(function (value) {\n          deleteForm.push({\n            _id: value._id\n          });\n\n          if (value.secondComment && value.secondComment.length) {\n            value.secondComment.forEach(function (data) {\n              deleteForm.push({\n                _id: data._id\n              });\n            });\n          }\n        });\n      }\n\n      return deleteForm;\n    },\n    //删除评论\n    deleteComment: function deleteComment(deleteData) {\n      var _this = this;\n\n      this.$confirm(\"将永久删除该评论，并且删除所有子评论, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var deleteForm;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                deleteForm = [];\n\n                if (deleteData.secondComment && deleteData.secondComment.length) {\n                  deleteForm = _this.deleteFormId(deleteData);\n                } else {\n                  deleteForm.push({\n                    _id: deleteData._id\n                  });\n                }\n\n                deleteForm = JSON.stringify(deleteForm);\n                _context5.next = 5;\n                return commentDelete({\n                  deleteForm: deleteForm,\n                  articleId: _this.$route.params.id\n                });\n\n              case 5:\n                _this.$utils.elMessageBox(\"删除成功\", \"success\");\n\n                _this.$emit(\"commentNumAdd\");\n\n                _this.getData();\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    },\n    goSecondReply: function goSecondReply(_id, valueChildId, userInfo) {\n      if (this.getToken) {\n        if (valueChildId) {\n          this.showChildComment = valueChildId;\n        } else {\n          this.showChildComment = _id;\n        } //评论id\n\n\n        this.commentForm.parentId = _id; //被回复人id\n\n        this.commentForm.toUserId = userInfo._id; //评论类型\n\n        this.commentForm.commentGrade = \"3\"; //关闭评论输入框\n\n        this.showBtn = false; //清除评论内容\n\n        this.commentForm.content = \"\"; //对应位置插入回复框\n\n        this.showOneComment = -1;\n      } else {\n        this.$utils.elMessageBox(\"您还未登录，请登录后再试！！！\", \"error\");\n      }\n    },\n    goUserDetail: function goUserDetail(userId) {\n      this.$router.push({\n        path: \"/article/release_manage/\".concat(userId)\n      });\n    },\n    sortCheck: function sortCheck() {\n      this.form.sortStatus = ~this.form.sortStatus == 0 ? 1 : -1;\n      this.getData();\n    }\n  },\n  computed: {\n    getToken: function getToken() {\n      return !!this.$store.getters.getToken;\n    },\n    avatarUrl: function avatarUrl() {\n      return this.$store.getters.getUser.avatar;\n    },\n    // 时间转换\n    getTime: function getTime() {\n      return function (value) {\n        return this.$utils.timeToDate(value);\n      };\n    }\n  }\n};",{"version":3,"sources":["getComment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"comment-box\">\n    <!-- 评论输入款 -->\n    <div class=\"my-box\">\n      <div class=\"avatar-input\">\n        <img :src=\"avatarUrl\" alt=\"\" v-if=\"getToken\" />\n        <el-input type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 2 }\" placeholder=\"请输入评论内容\" @focus=\"commentInputFocus\" maxlength=\"200\" v-model=\"commentArticle\">\n        </el-input>\n      </div>\n      <div class=\"btn-box\" v-show=\"showBtn\">\n        <el-button type=\"primary\" round @click=\"cancelComment\">取 消 评 论</el-button>\n        <el-button type=\"primary\" round @click=\"sendComment\">发 表 评 论</el-button>\n      </div>\n    </div>\n    <div class=\"sort-box\" v-if=\"allCommentData.length\">\n      <h3>排序</h3>\n      <h6 @click=\"sortCheck\">\n        按时间\n        <li class=\"el-icon-sort\"></li>\n      </h6>\n    </div>\n    <!-- 评论列表 -->\n    <div class=\"user-comment\" v-for=\"(item, index) in allCommentData\" :key=\"index\">\n      <!-- 一级评论列表（评论文章）展示 -->\n      <img :src=\"item.fromUserId.avatar\" @click=\"goUserDetail(item.fromUserId._id)\" />\n      <div class=\"box-right\">\n        <div style=\"font-weight: 550\">{{ item.fromUserId.nickname }}</div>\n        <p>{{ item.content }}</p>\n        <div class=\"options\">\n          <span class=\"delete-comment\" v-if=\"isMe == item.fromUserId._id\" @click=\"deleteComment(item)\">删除</span>\n          <span class=\"reply\" @click=\"goReplyOneComment(index, item.fromUserId)\">回复</span>\n          <span>{{ getTime(item.createdTime) }}</span>\n        </div>\n        <!-- 回复输入框 一级评论-->\n        <div class=\"my-box\" v-if=\"showOneComment === index\">\n          <div class=\"avatar-input\">\n            <img :src=\"avatarUrl\" />\n            <el-input type=\"textarea\" :autosize=\"{ minRows: 1, maxRows: 2 }\" :placeholder=\"`回复: ${item.fromUserId.nickname}`\" maxlength=\"200\" v-model=\"commentForm.content\">\n            </el-input>\n          </div>\n          <div class=\"btn-box\">\n            <el-button type=\"primary\" round @click=\"cancelReplyOneComment\">取 消 回 复</el-button>\n            <el-button type=\"primary\" round @click=\"sendReply\">发 表 评 论</el-button>\n          </div>\n        </div>\n\n        <!-- 二级评论（回复别人的评论） -->\n        <div class=\"user-comment child-comment\" v-for=\"(value, _index) in item.secondComment\" :key=\"_index\">\n          <img :src=\"value.fromUserInfo.avatar\" @click=\"goUserDetail(value.fromUserInfo._id)\" />\n          <div class=\"box-right reply-right\">\n            <div style=\"font-weight: 550\">{{ value.fromUserInfo.nickname }}</div>\n            <p>{{ value.content }}</p>\n            <div class=\"options\">\n              <span class=\"delete-comment\" v-if=\"isMe == value.fromUserInfo._id\" @click=\"deleteComment(value)\">删除 </span>\n              <span class=\"reply\" @click=\"goSecondReply(value._id, '', value.fromUserInfo)\">回复</span>\n              <span>{{ getTime(value.createdTime) }}</span>\n            </div>\n            <!-- 回复输入框 回复别人的回复-->\n            <div class=\"my-box reply-box\" v-if=\"showChildComment == value._id\">\n              <div class=\"avatar-input\">\n                <img :src=\"avatarUrl\" alt=\"\" />\n                <el-input\n                  type=\"textarea\"\n                  :autosize=\"{ minRows: 1, maxRows: 2 }\"\n                  :placeholder=\"`回复: ${value.fromUserInfo.nickname}`\"\n                  maxlength=\"200\"\n                  v-model=\"commentForm.content\"\n                >\n                </el-input>\n              </div>\n              <div class=\"btn-box\">\n                <el-button type=\"primary\" round @click=\"cancelReplyOneComment\">取 消 回 复</el-button>\n                <el-button type=\"primary\" round @click=\"sendReply\">发 表 评 论</el-button>\n              </div>\n            </div>\n            <!-- 三级评论 -->\n            <div class=\"three_comment_box\" v-for=\"(valueChild, indexChild) in value.secondComment\" :key=\"indexChild\">\n              <img :src=\"valueChild.fromUserInfo.avatar\" @click=\"goUserDetail(valueChild.fromUserInfo._id)\" />\n              <div class=\"box-right reply-right three_box-right\">\n                <div style=\"font-weight: 550\">{{ valueChild.fromUserInfo.nickname }}</div>\n                <p>\n                  回复\n                  <span style=\"color: #0099ff\" class=\"get-user\" @click=\"goUserDetail(valueChild.toUserInfo._id)\"> @{{ valueChild.toUserInfo.nickname }} </span>\n                  :\n                  {{ valueChild.content }}\n                </p>\n                <div class=\"options\">\n                  <span class=\"delete-comment\" v-if=\"isMe == valueChild.fromUserInfo._id\" @click=\"deleteComment(valueChild)\">删除 </span>\n                  <span class=\"reply\" @click=\"goSecondReply(value._id, valueChild._id, valueChild.fromUserInfo)\">回复</span>\n                  <span>{{ getTime(valueChild.createdTime) }}</span>\n                </div>\n                <!-- 回复输入框 回复别人的回复-->\n                <div class=\"my-box reply-box three_left_margin\" v-if=\"showChildComment == valueChild._id\">\n                  <div class=\"avatar-input\">\n                    <img :src=\"avatarUrl\" alt=\"\" />\n                    <el-input\n                      type=\"textarea\"\n                      :autosize=\"{ minRows: 1, maxRows: 2 }\"\n                      :placeholder=\"`回复: ${valueChild.fromUserInfo.nickname}`\"\n                      maxlength=\"200\"\n                      v-model=\"commentForm.content\"\n                    >\n                    </el-input>\n                  </div>\n                  <div class=\"btn-box\">\n                    <el-button type=\"primary\" round @click=\"cancelReplyOneComment\">取 消 回 复</el-button>\n                    <el-button type=\"primary\" round @click=\"sendReply\">发 表 评 论</el-button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"!allCommentData.length\" style=\"color: #999aaa; margin-bottom: 10px; font-size: 16px; text-align: center\">此文章还未被吐槽，快来吐槽一下吧</div>\n    <div class=\"page-box\">\n      <el-pagination :current-page.sync=\"nowPage\" background layout=\"prev, pager, next\" :total=\"total\" @current-change=\"currentChange\"></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { commentGetApi, commentAddApi, commentDelete } from \"@/api/api\";\nexport default {\n  name: \"getComment\",\n  data() {\n    return {\n      showOneComment: -1, //确定回复输入框的插入位置\n      showBtn: false, //显示评论输入框\n      showChildComment: \"\",\n      commentArticle: \"\",\n      total: 10,\n      nowPage: 1,\n      isMe: this.$utils.getUserId(),\n      allCommentData: [\r\n\t\t {\"fromUserId\":{\"_id\":1,\"nickname\":\"爱开发的小罗\",\"avatar\": \"/static/img/avatar/1.jpg\"},\"content\":\"祝他早日康复！\"},\r\n\t\t   {\"fromUserId\":{\"_id\":2,\"nickname\":\"爱开发的小罗\",\"avatar\": \"/static/img/avatar/2.jpg\"},\"content\":\"我爷爷也是这病，现在还处于治疗中，真让我担心。\"}\r\n\t  ],\n      commentForm: {\n        articleId: this.$route.params.id,\n        content: \"\",\n        parentId: \"\",\n        commentGrade: \"\",\n        fromUserId: this.$utils.getUserId(),\n        toUserId: \"\",\n      },\n      form: {\n        articleId: this.$route.params.id,\n        sortStatus: -1,\n        pageNum: 1,\n      },\n      ifLogin: true,\n    };\n  },\n\n  async created() {\n    await this.getData();\n  },\n\n  mounted() {},\n  methods: {\n    //获取所有评论\n    async getData() {\n      /* const res = await commentGetApi(this.form);\n      if (res.code === 200) {\n        this.allCommentData = res.data.data;\n        this.total = res.data.total;\n      } */\n    },\n    //点击某一页时，currentpage为页码\n    currentChange(currentpage) {\n      this.form.pageNum = currentpage;\n      this.getData();\n    },\n    //点击回复————回复一级评论\n    goReplyOneComment(index, userInfo) {\n      if (this.getToken) {\n        //清除评论文章的内容\n        this.commentArticle = \"\";\n        //清除评论内容\n        this.commentForm.content = \"\";\n        //评论id\n        this.commentForm.parentId = this.allCommentData[index]._id;\n        //被回复人id\n        this.commentForm.toUserId = userInfo._id;\n        //评论类型\n        this.commentForm.commentGrade = \"2\";\n        //关闭评论输入框\n        this.showBtn = false;\n        //对应位置插入回复框\n        this.showOneComment = index;\n        this.showChildComment = \"\";\n      } else {\n        this.$utils.elMessageBox(\"您还未登录，请登录后再试！！！\", \"error\");\n      }\n    },\n    //点击评论文章输入框\n    commentInputFocus() {\n      if (this.getToken) {\n        this.commentForm.content = \"\";\n        this.showOneComment = -1;\n        this.showBtn = true;\n        this.showChildComment = \"\";\n      } else {\n        this.$utils.elMessageBox(\"您还未登录，请登录后再试！！！\", \"error\");\n      }\n    },\n    //取消评论\n    cancelComment() {\n      this.showBtn = false;\n      this.commentArticle = \"\";\n    },\n    //取消回复\n    cancelReplyOneComment() {\n      this.commentForm.content = \"\";\n      this.showOneComment = -1;\n      this.showChildComment = \"\";\n    },\n    //添加评论\n    async sendComment() {\n      if (this.getToken) {\n        this.commentForm.content = this.commentArticle;\n        this.commentForm.toUserId = this.$utils.getUserId();\n        this.commentForm.commentGrade = \"1\";\n        const res = await commentAddApi(this.commentForm);\n        if (res.code === 200) {\n          this.getData();\n          this.commentForm.content = \"\";\n          this.commentArticle = \"\";\n          this.showBtn = false;\n          this.$utils.elMessageBox(\"评论成功\", \"success\");\n          this.$emit(\"commentNumAdd\");\n        }\n      } else {\n        this.$utils.elMessageBox(\"请登录后再发表评论\", \"error\");\n      }\n    },\n    async sendReply() {\n      if (this.getToken) {\n        const res = await commentAddApi(this.commentForm);\n        if (res.code == 200) {\n          this.$utils.elMessageBox(\"回复成功\", \"success\");\n          this.$emit(\"commentNumAdd\");\n          this.showChildComment = \"\";\n          this.showOneComment = -1;\n          this.commentForm.content = \"\";\n          this.getData();\n        }\n      } else {\n        this.$utils.elMessageBox(\"请登录后再进行回复操作\", \"error\");\n      }\n    },\n\n    deleteFormId(deleteData) {\n      let deleteForm = [];\n      deleteForm.push({ _id: deleteData._id });\n      if (deleteData.secondComment.length) {\n        deleteData.secondComment.forEach((value) => {\n          deleteForm.push({ _id: value._id });\n          if (value.secondComment && value.secondComment.length) {\n            value.secondComment.forEach((data) => {\n              deleteForm.push({ _id: data._id });\n            });\n          }\n        });\n      }\n      return deleteForm;\n    },\n    //删除评论\n    deleteComment(deleteData) {\n      this.$confirm(\"将永久删除该评论，并且删除所有子评论, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(async () => {\n          let deleteForm = [];\n          if (deleteData.secondComment && deleteData.secondComment.length) {\n            deleteForm = this.deleteFormId(deleteData);\n          } else {\n            deleteForm.push({ _id: deleteData._id });\n          }\n          deleteForm = JSON.stringify(deleteForm);\n          await commentDelete({ deleteForm, articleId: this.$route.params.id });\n          this.$utils.elMessageBox(\"删除成功\", \"success\");\n          this.$emit(\"commentNumAdd\");\n          this.getData();\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    goSecondReply(_id, valueChildId, userInfo) {\n      if (this.getToken) {\n        if (valueChildId) {\n          this.showChildComment = valueChildId;\n        } else {\n          this.showChildComment = _id;\n        }\n        //评论id\n        this.commentForm.parentId = _id;\n        //被回复人id\n        this.commentForm.toUserId = userInfo._id;\n        //评论类型\n        this.commentForm.commentGrade = \"3\";\n        //关闭评论输入框\n        this.showBtn = false;\n        //清除评论内容\n        this.commentForm.content = \"\";\n        //对应位置插入回复框\n        this.showOneComment = -1;\n      } else {\n        this.$utils.elMessageBox(\"您还未登录，请登录后再试！！！\", \"error\");\n      }\n    },\n    goUserDetail(userId) {\n      this.$router.push({ path: `/article/release_manage/${userId}` });\n    },\n    sortCheck() {\n      this.form.sortStatus = ~this.form.sortStatus == 0 ? 1 : -1;\n      this.getData();\n    },\n  },\n\n  computed: {\n    getToken() {\n      return !!this.$store.getters.getToken;\n    },\n    avatarUrl() {\n      return this.$store.getters.getUser.avatar;\n    },\n    // 时间转换\n    getTime() {\n      return function (value) {\n        return this.$utils.timeToDate(value);\n      };\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n.sort-box {\n  border-top: 1px solid #e5e9ef;\n  width: 830px;\n  height: 25px;\n  padding: 10px 0px 10px 0px;\n  display: flex;\n  align-items: center;\n  h3 {\n    font-size: 20px;\n    margin: 0px;\n  }\n  h6 {\n    cursor: pointer;\n    font-size: 14px;\n    font-weight: 400;\n    margin: 0px 0px 0px 30px;\n    box-sizing: border-box;\n  }\n  h6:hover {\n    color: #0099ff;\n  }\n  .label_color {\n    color: #0099ff;\n  }\n}\n.page-box {\n  text-align: center;\n}\n.three_comment_box {\n  border-top: 1px solid #e5e9ef;\n  width: 727px;\n  display: flex;\n  .three_left_margin {\n    position: relative;\n    left: -49px;\n    top: 0px;\n  }\n  .three_box-right {\n    width: 680px;\n    .options {\n      width: 679px;\n    }\n  }\n}\n.comment-box {\n  width: 830px;\n  display: flex;\n  padding: 15px;\n  flex-direction: column;\n  font-size: 14px;\n\n  .user-comment {\n    padding-top: 20px;\n    border-top: 1px solid #e5e9ef;\n    display: flex;\n    margin-bottom: 0px;\n    img {\n      cursor: pointer;\n      width: 33px;\n      margin-right: 15px;\n      height: 33px;\n      border-radius: 50%;\n    }\n    .box-right {\n      width: 775px;\n      text-align: left;\n      p {\n        margin: 5px 0px;\n        white-space: pre-wrap;\n      }\n      .options {\n        text-align: right;\n        color: #999aaa;\n        margin-bottom: 15px;\n        .delete-comment {\n          cursor: pointer;\n          color: #fc5531;\n        }\n        .reply {\n          cursor: pointer;\n        }\n        .reply:hover {\n          color: #0099ff;\n        }\n        span {\n          margin-left: 100px;\n          display: inline-block;\n        }\n      }\n      .get-user {\n        cursor: pointer;\n      }\n    }\n  }\n  .child-comment {\n    padding-top: 0px;\n    img {\n      cursor: pointer;\n    }\n    .reply-right {\n      .reply-box {\n        .avatar-input {\n          .el-textarea {\n            width: 670px;\n          }\n        }\n      }\n    }\n  }\n}\n.my-box {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  .avatar-input {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    img {\n      width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      margin-right: 15px;\n    }\n    .el-textarea {\n      width: 775px;\n    }\n  }\n  .btn-box {\n    margin-top: 8px;\n    text-align: right;\n    .el-button.is-round {\n      padding: 8px 15px;\n    }\n    .el-button--primary:nth-child(1) {\n      color: #0099ff;\n      border: 1px solid #0099ff;\n      background-color: #fff;\n\n      &:hover {\n        border: 1px solid #015bf1;\n        color: #015bf1;\n      }\n    }\n  }\n}\n</style>"],"sourceRoot":"src/views/article/articleDetails/components"}]}