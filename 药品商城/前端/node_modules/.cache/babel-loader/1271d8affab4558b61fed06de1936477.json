{"remainingRequest":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js!F:\\HBuilderX软件\\Project\\brainHealth\\src\\utils\\authority.js","dependencies":[{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\src\\utils\\authority.js","mtime":1634182984000},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js","mtime":1652873271922}],"contextDependencies":[],"result":["import store from '@/store';\nimport $utils from '@/utils/index';\nimport router from \"@/router\"; // token判断登录状态，user一旦存在就不允许修改\n\nexport var userAuthority = function userAuthority() {\n  var beforeToken = localStorage.getItem(\"token\");\n  var afterToken = null;\n  var beforeUser = JSON.stringify(localStorage.getItem(\"id\"));\n  var afterUser = null;\n  var timer = setInterval(function () {\n    afterToken = localStorage.getItem(\"token\");\n    afterUser = JSON.stringify(localStorage.getItem(\"id\"));\n\n    if (afterToken !== beforeToken) {\n      beforeToken = localStorage.getItem(\"token\");\n      store.commit(\"setToken\", JSON.parse(afterToken));\n      !afterToken && localStorage.removeItem(\"token\");\n    }\n\n    if (afterToken && beforeUser && beforeUser !== afterUser) {\n      $utils.elMessageBox(\"获取用户信息失败，请重新登录-权限\", \"warning\");\n      localStorage.clear();\n      beforeUser = JSON.stringify(localStorage.getItem(\"id\"));\n      router.currentRoute.path !== \"/\" && router.push(\"/\");\n    }\n  }, 500);\n  return timer;\n};",{"version":3,"sources":["F:\\HBuilderX软件\\Project\\brainHealth\\src\\utils\\authority.js"],"names":["store","$utils","router","userAuthority","beforeToken","localStorage","getItem","afterToken","beforeUser","JSON","stringify","afterUser","timer","setInterval","commit","parse","removeItem","elMessageBox","clear","currentRoute","path","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,MAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeL,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAf,CAAjB;AACA,MAAIK,SAAS,GAAG,IAAhB;AACA,MAAMC,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC9BN,IAAAA,UAAU,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AACAK,IAAAA,SAAS,GAAGF,IAAI,CAACC,SAAL,CAAeL,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAf,CAAZ;;AACA,QAAIC,UAAU,KAAKH,WAAnB,EAAgC;AAC9BA,MAAAA,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAN,MAAAA,KAAK,CAACc,MAAN,CAAa,UAAb,EAAyBL,IAAI,CAACM,KAAL,CAAWR,UAAX,CAAzB;AACA,OAACA,UAAD,IAAeF,YAAY,CAACW,UAAb,CAAwB,OAAxB,CAAf;AACD;;AACD,QAAIT,UAAU,IAAIC,UAAd,IAA4BA,UAAU,KAAKG,SAA/C,EAA0D;AACxDV,MAAAA,MAAM,CAACgB,YAAP,CAAoB,mBAApB,EAAyC,SAAzC;AACAZ,MAAAA,YAAY,CAACa,KAAb;AACAV,MAAAA,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeL,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAf,CAAb;AACAJ,MAAAA,MAAM,CAACiB,YAAP,CAAoBC,IAApB,KAA6B,GAA7B,IAAoClB,MAAM,CAACmB,IAAP,CAAY,GAAZ,CAApC;AACD;AACF,GAdwB,EActB,GAdsB,CAAzB;AAeA,SAAOT,KAAP;AACD,CArBM","sourcesContent":["import store from '@/store'\r\nimport $utils from '@/utils/index'\r\nimport router from \"@/router\"\r\n\r\n// token判断登录状态，user一旦存在就不允许修改\r\nexport const userAuthority = () => {\r\n  let beforeToken = localStorage.getItem(\"token\")\r\n  let afterToken = null\r\n  let beforeUser = JSON.stringify(localStorage.getItem(\"id\"))\r\n  let afterUser = null\r\n  const timer = setInterval(() => {\r\n    afterToken = localStorage.getItem(\"token\")\r\n    afterUser = JSON.stringify(localStorage.getItem(\"id\"))\r\n    if (afterToken !== beforeToken) {\r\n      beforeToken = localStorage.getItem(\"token\")\r\n      store.commit(\"setToken\", JSON.parse(afterToken))\r\n      !afterToken && localStorage.removeItem(\"token\")\r\n    }\r\n    if (afterToken && beforeUser && beforeUser !== afterUser) {\r\n      $utils.elMessageBox(\"获取用户信息失败，请重新登录-权限\", \"warning\")\r\n      localStorage.clear()\r\n      beforeUser = JSON.stringify(localStorage.getItem(\"id\"))\r\n      router.currentRoute.path !== \"/\" && router.push(\"/\")\r\n    }\r\n  }, 500)\r\n  return timer\r\n}"]}]}