{"remainingRequest":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js!F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\HBuilderX软件\\Project\\brainHealth\\src\\views\\user\\updatePass\\updatePass.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\src\\views\\user\\updatePass\\updatePass.vue","mtime":1634182984000},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js","mtime":1652873271922},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js","mtime":1652873270400}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\HBuilderX\\u8F6F\\u4EF6\\\\Project\\\\brainHealth\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { updatePassRule } from \"@/utils/rules\";\nimport { updatePassApi } from \"@/api/api\";\nexport default {\n  name: \"updatePass\",\n  data: function data() {\n    return {\n      ruleForm: {\n        oldpass: \"\",\n        newpass: \"\",\n        okpass: \"\",\n        _id: JSON.parse(localStorage.getItem(\"id\"))\n      },\n      updatePassRule: updatePassRule\n    };\n  },\n  methods: {\n    updatePass: function () {\n      var _updatePass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$refs.ruleForm.validate(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee(valid) {\n                    var res;\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (valid) {\n                              if (_this.ruleForm.newpass === _this.ruleForm.okpass) {\n                                res = updatePassApi(_this.ruleForm);\n\n                                if (res) {\n                                  _this.$utils.elMessageBox(\"修改密码成功,请重新登录\", \"success\", 500);\n\n                                  setTimeout(function () {\n                                    _this.$router.push(\"/login\");\n\n                                    localStorage.clear();\n                                  }, 700);\n                                }\n                              }\n                            }\n\n                          case 1:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updatePass() {\n        return _updatePass.apply(this, arguments);\n      }\n\n      return updatePass;\n    }()\n  },\n  computed: {\n    nickname: function nickname() {\n      return this.$store.getters.getUser.nickname;\n    }\n  }\n};",{"version":3,"sources":["updatePass.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,cAAA,QAAA,eAAA;AACA,SAAA,aAAA,QAAA,WAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,GAAA,EAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAJA,OADA;AAOA,MAAA,cAAA,EAAA;AAPA,KAAA;AASA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,KAAA,CAAA,QAAA,CAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAA,iBAAA,KAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAAA,KAAA,EAAA;AACA,kCAAA,KAAA,CAAA,QAAA,CAAA,OAAA,KAAA,KAAA,CAAA,QAAA,CAAA,MAAA,EAAA;AACA,gCAAA,GADA,GACA,aAAA,CAAA,KAAA,CAAA,QAAA,CADA;;AAEA,oCAAA,GAAA,EAAA;AACA,kCAAA,KAAA,CAAA,MAAA,CAAA,YAAA,CAAA,cAAA,EAAA,SAAA,EAAA,GAAA;;AACA,kCAAA,UAAA,CAAA,YAAA;AACA,oCAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA;;AACA,oCAAA,YAAA,CAAA,KAAA;AACA,mCAHA,EAGA,GAHA,CAAA;AAIA;AACA;AACA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAbA;AA+BA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA;AACA;AAHA;AA/BA,CAAA","sourcesContent":["<template>\n  <div class=\"password-box\">\n    <div class=\"update-password\">\n      <div class=\"input-item nickname\">\n        <p>用户名</p>\n        <el-input v-model=\"nickname\" disabled></el-input>\n      </div>\n      <el-form class=\"ruleForm-box\" ref=\"ruleForm\" :model=\"ruleForm\" :rules=\"updatePassRule\" label-width=\"0\" label-position=\"left\">\n        <el-form-item prop=\"oldpass\">\n          <div class=\"input-item\">\n            <p>旧密码</p>\n            <el-input v-model=\"ruleForm.oldpass\" show-password placeholder=\"请输入旧密码\"></el-input>\n          </div>\n        </el-form-item>\n        <el-form-item prop=\"newpass\">\n          <div class=\"input-item\">\n            <p>新密码</p>\n            <el-input v-model=\"ruleForm.newpass\" show-password placeholder=\"请输入新密码\"></el-input>\n          </div>\n        </el-form-item>\n        <el-form-item prop=\"okpass\">\n          <div class=\"input-item\">\n            <p>确认密码</p>\n            <el-input v-model=\"ruleForm.okpass\" show-password placeholder=\"请再次输入新密码\"></el-input>\n          </div>\n        </el-form-item>\n        <div class=\"input-item confirm-btn\">\n          <el-button type=\"primary\" @click=\"updatePass\">确 定</el-button>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { updatePassRule } from \"@/utils/rules\";\nimport { updatePassApi } from \"@/api/api\";\nexport default {\n  name: \"updatePass\",\n  data() {\n    return {\n      ruleForm: {\n        oldpass: \"\",\n        newpass: \"\",\n        okpass: \"\",\n        _id: JSON.parse(localStorage.getItem(\"id\")),\n      },\n      updatePassRule: updatePassRule,\n    };\n  },\n  methods: {\n    async updatePass() {\n      this.$refs.ruleForm.validate(async (valid) => {\n        if (valid) {\n          if (this.ruleForm.newpass === this.ruleForm.okpass) {\n            const res = updatePassApi(this.ruleForm);\n            if (res) {\n              this.$utils.elMessageBox(\"修改密码成功,请重新登录\", \"success\", 500);\n              setTimeout(() => {\n                this.$router.push(\"/login\");\n                localStorage.clear();\n              }, 700);\n            }\n          }\n        }\n      });\n    },\n  },\n  computed: {\n    nickname() {\n      return this.$store.getters.getUser.nickname;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n.password-box {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .update-password {\n    width: 1000px;\n    box-shadow: 0 0px 30px 3px #aaa;\n    height: 500px;\n    margin-top: 20px;\n    padding-top: 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    .input-item {\n      display: flex;\n      height: 80px;\n      align-items: center;\n      p {\n        width: 100px;\n        font-weight: 550;\n      }\n      .el-input {\n        width: 500px;\n      }\n    }\n    .nickname {\n      p {\n        font-size: 14px;\n      }\n    }\n    .input-item:nth-child(4) {\n      .el-button {\n        padding: 15px 50px;\n        font-size: 16px;\n        letter-spacing: 5px;\n      }\n    }\n    .confirm-btn {\n      justify-content: center;\n    }\n  }\n  /deep/.el-form-item__content {\n    .el-form-item__error {\n      position: absolute;\n      font-size: 14px;\n      top: 65px;\n      left: 100px;\n    }\n  }\n}\n</style>"],"sourceRoot":"src/views/user/updatePass"}]}