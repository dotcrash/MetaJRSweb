{"remainingRequest":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js!F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\HBuilderX软件\\Project\\brainHealth\\src\\components\\signUp\\InputInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\src\\components\\signUp\\InputInfo.vue","mtime":1614246688000},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js","mtime":1652873271922},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\vue-loader\\lib\\index.js","mtime":1652873270400}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"F:\\\\HBuilderX\\u8F6F\\u4EF6\\\\Project\\\\brainHealth\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport store from '@/vuex/store';\nimport { mapMutations, mapActions } from 'vuex';\nexport default {\n  name: 'InputInfo',\n  data: function data() {\n    var _this = this;\n\n    var validatePassCheck = function validatePassCheck(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.formValidate.password) {\n        callback(new Error('两次输入的密码不一样'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      formValidate: {\n        name: '',\n        mail: '',\n        password: '',\n        repassword: ''\n      },\n      ruleValidate: {\n        name: [{\n          required: true,\n          message: '用户名不能为空',\n          trigger: 'blur'\n        }],\n        mail: [{\n          required: true,\n          message: '邮箱不能为空',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '邮箱格式错误',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不能为空',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          min: 6,\n          message: '密码长度不能小于6',\n          trigger: 'blur'\n        }],\n        repassword: [{\n          validator: validatePassCheck,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: _objectSpread({}, mapMutations(['SET_SIGN_UP_SETP']), mapActions(['addSignUpUser']), {\n    handleSubmit: function handleSubmit(name) {\n      var _this2 = this;\n\n      var father = this;\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this2.$Message.success('注册成功');\n\n          var userinfo = {\n            username: _this2.formValidate.name,\n            password: _this2.formValidate.password,\n            mail: _this2.formValidate.mail,\n            phone: _this2.$route.query.phone\n          };\n\n          _this2.addSignUpUser(userinfo);\n\n          father.SET_SIGN_UP_SETP(2);\n\n          _this2.$router.push({\n            path: '/SignUp/signUpDone'\n          });\n        } else {\n          _this2.$Message.error('注册失败');\n        }\n      });\n    }\n  }),\n  store: store\n};",{"version":3,"sources":["InputInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,KAAA,MAAA,cAAA;AACA,SAAA,YAAA,EAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AAAA;;AACA,QAAA,iBAAA,GAAA,SAAA,iBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,KAAA,EAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,KAAA,KAAA,CAAA,YAAA,CAAA,QAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,YAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KARA;;AASA,WAAA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA,EAHA;AAIA,QAAA,UAAA,EAAA;AAJA,OADA;AAOA,MAAA,YAAA,EAAA;AACA,QAAA,IAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,IAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CAJA;AAQA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,IAAA,EAAA,QAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,OAAA,EAAA,WAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CARA;AAYA,QAAA,UAAA,EAAA,CACA;AAAA,UAAA,SAAA,EAAA,iBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AAZA;AAPA,KAAA;AAwBA,GApCA;AAqCA,EAAA,OAAA,oBACA,YAAA,CAAA,CAAA,kBAAA,CAAA,CADA,EAEA,UAAA,CAAA,CAAA,eAAA,CAAA,CAFA;AAGA,IAAA,YAHA,wBAGA,IAHA,EAGA;AAAA;;AACA,UAAA,MAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,IAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,QAAA,GAAA;AACA,YAAA,QAAA,EAAA,MAAA,CAAA,YAAA,CAAA,IADA;AAEA,YAAA,QAAA,EAAA,MAAA,CAAA,YAAA,CAAA,QAFA;AAGA,YAAA,IAAA,EAAA,MAAA,CAAA,YAAA,CAAA,IAHA;AAIA,YAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAJA,WAAA;;AAMA,UAAA,MAAA,CAAA,aAAA,CAAA,QAAA;;AACA,UAAA,MAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA,SAXA,MAWA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA;AACA;AACA,OAfA;AAgBA;AArBA,IArCA;AA4DA,EAAA,KAAA,EAAA;AA5DA,CAAA","sourcesContent":["<template>\n  <div class=\"info-form\">\n     <Form ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" :label-width=\"80\" >\n        <FormItem label=\"用户名\" prop=\"name\">\n            <i-input v-model=\"formValidate.name\" clearable size=\"large\" placeholder=\"请输入你的姓名\"></i-input>\n        </FormItem>\n        <FormItem label=\"邮箱\" prop=\"mail\">\n            <i-input v-model=\"formValidate.mail\" clearable size=\"large\" placeholder=\"请输入你的邮箱\"></i-input>\n        </FormItem>\n        <FormItem label=\"密码\" prop=\"password\">\n            <i-input type=\"password\" v-model=\"formValidate.password\" clearable size=\"large\" placeholder=\"请输入你的密码\"></i-input>\n        </FormItem>\n        <FormItem label=\"确认密码\" prop=\"repassword\">\n            <i-input type=\"password\" v-model=\"formValidate.repassword\" clearable size=\"large\" placeholder=\"请再次输入你的密码\"></i-input>\n        </FormItem>\n        <Button type=\"error\" size=\"large\" long @click=\"handleSubmit('formValidate')\">注册</Button>\n    </Form>\n  </div>\n</template>\n\n<script>\nimport store from '@/vuex/store';\nimport { mapMutations, mapActions } from 'vuex';\nexport default {\n  name: 'InputInfo',\n  data () {\n    const validatePassCheck = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.formValidate.password) {\n        callback(new Error('两次输入的密码不一样'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      formValidate: {\n        name: '',\n        mail: '',\n        password: '',\n        repassword: ''\n      },\n      ruleValidate: {\n        name: [\n          { required: true, message: '用户名不能为空', trigger: 'blur' }\n        ],\n        mail: [\n          { required: true, message: '邮箱不能为空', trigger: 'blur' },\n          { type: 'email', message: '邮箱格式错误', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '密码不能为空', trigger: 'blur' },\n          { type: 'string', min: 6, message: '密码长度不能小于6', trigger: 'blur' }\n        ],\n        repassword: [\n          { validator: validatePassCheck, trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  methods: {\n    ...mapMutations(['SET_SIGN_UP_SETP']),\n    ...mapActions(['addSignUpUser']),\n    handleSubmit (name) {\n      const father = this;\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          this.$Message.success('注册成功');\n          const userinfo = {\n            username: this.formValidate.name,\n            password: this.formValidate.password,\n            mail: this.formValidate.mail,\n            phone: this.$route.query.phone\n          };\n          this.addSignUpUser(userinfo);\n          father.SET_SIGN_UP_SETP(2);\n          this.$router.push({ path: '/SignUp/signUpDone' });\n        } else {\n          this.$Message.error('注册失败');\n        }\n      });\n    }\n  },\n  store\n};\n</script>\n\n<style scoped>\n.info-form {\n  width: 90% !important;\n}\n</style>\n"],"sourceRoot":"src/components/signUp"}]}