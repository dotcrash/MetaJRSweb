{"remainingRequest":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js!F:\\HBuilderX软件\\Project\\brainHealth\\src\\utils\\index.js","dependencies":[{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\src\\utils\\index.js","mtime":1634182984000},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652873263289},{"path":"F:\\HBuilderX软件\\Project\\brainHealth\\node_modules\\babel-loader\\lib\\index.js","mtime":1652873271922}],"contextDependencies":[],"result":["import store from \"@/store\";\nimport { Message } from 'element-ui';\nexport default {\n  getBase64: function getBase64(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      var imgResult = ''; // FileReader对象的readAsDataURL方法可以将读取到的文件编码成base64\n\n      reader.readAsDataURL(file); //处理error事件。该事件在读取操作发生错误时触发。\n\n      reader.onerror = function (error) {\n        reject(error);\n      }; //处理load事件。该事件在读取操作完成时触发\n\n\n      reader.onload = function () {\n        imgResult = reader.result;\n      }; //处理loadend事件。该事件在读取操作结束时（要么成功，要么失败）触发。\n\n\n      reader.onloadend = function () {\n        resolve(imgResult);\n      };\n    });\n  },\n\n  /**\r\n  * 弹出提示信息\r\n  * @param {String} str  //提示的文字\r\n  * @param {String} type //提示类型\r\n  * @param {Number} time //展示时间\r\n  */\n  elMessageBox: function elMessageBox(str, type, time) {\n    var onlyOne = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (onlyOne && document.getElementsByClassName(\"el-message--\".concat(type)).length) return;\n    Message({\n      message: str,\n      type: type,\n      duration: time || 3000,\n      offset: 100 //距离顶部\n\n    });\n  },\n  getDate: function getDate(dateTimeStamp) {\n    if (dateTimeStamp == undefined) {\n      return false;\n    } else {\n      var date = new Date(dateTimeStamp); //dateTimeStamp 的 时间戳\n\n      var time = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n      var now = new Date().getTime(); //获取当前时间的时间戳\n\n      var daytime = 24 * 60 * 60 * 1000; //一天的时间\n\n      var hourtime = 60 * 60 * 1000; //一小时的时间\n\n      var mintime = 60 * 1000; //一分钟的时间\n\n      var sectime = 1000; //一秒钟的时间\n\n      var diffValue = now - time;\n      var dayT = diffValue / daytime;\n      var hourT = diffValue / hourtime;\n      var minT = diffValue / mintime;\n      var secT = diffValue / sectime;\n\n      if (dayT >= 1) {\n        return parseInt(dayT) + \"天前\";\n      } else if (hourT >= 1) {\n        return parseInt(hourT) + \"个小时前\";\n      } else if (minT >= 1) {\n        return parseInt(minT) + \"分钟前\";\n      } else if (secT >= 1 || secT <= 20) {\n        return \"刚刚\";\n      } else {\n        return parseInt(secT) + \"秒前\";\n      }\n    }\n  },\n\n  /**\r\n   * 转换为某分某时某天\r\n   * @param {utc时间格式} dateTimeStamp \r\n   * @returns 某分某时某天等\r\n   */\n  timeToDate: function timeToDate(dateTimeStamp) {\n    if (dateTimeStamp == undefined) {\n      return '';\n    } else {\n      var date = new Date(dateTimeStamp); //dateTimeStamp 的 时间戳\n\n      var utctime = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n      var time = new Date(utctime);\n      var Y = time.getFullYear() + '-';\n      var M = (time.getMonth() + 1 < 10 ? '0' + (time.getMonth() + 1) : time.getMonth() + 1) + '-';\n      var D = (time.getDate() < 10 ? '0' + time.getDate() : time.getDate()) + ' ';\n      var h = (time.getHours() < 10 ? '0' + time.getHours() : time.getHours()) + ':';\n      var m = (time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes()) + ':';\n      var s = time.getSeconds() < 10 ? '0' + time.getSeconds() : time.getSeconds();\n      return Y + M + D + h + m + s;\n    }\n  },\n  getUserId: function getUserId() {\n    if (!store.getters.getToken) return null;\n    var userId = localStorage.getItem(\"id\");\n\n    if (!userId) {\n      return null;\n    }\n\n    return JSON.parse(userId);\n  }\n};",{"version":3,"sources":["F:\\HBuilderX软件\\Project\\brainHealth\\src\\utils\\index.js"],"names":["store","Message","getBase64","file","Promise","resolve","reject","reader","FileReader","imgResult","readAsDataURL","onerror","error","onload","result","onloadend","elMessageBox","str","type","time","onlyOne","document","getElementsByClassName","length","message","duration","offset","getDate","dateTimeStamp","undefined","date","Date","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","now","getTime","daytime","hourtime","mintime","sectime","diffValue","dayT","hourT","minT","secT","parseInt","timeToDate","utctime","Y","getFullYear","M","getMonth","D","h","getHours","m","getMinutes","s","getSeconds","getUserId","getters","getToken","userId","localStorage","getItem","JSON","parse"],"mappings":"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","sourcesContent":["import store from \"@/store\"\r\nimport { Message } from 'element-ui'\r\n\r\nexport default {\r\n  getBase64: (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      let reader = new FileReader()\r\n      let imgResult = ''\r\n      // FileReader对象的readAsDataURL方法可以将读取到的文件编码成base64\r\n      reader.readAsDataURL(file)\r\n      //处理error事件。该事件在读取操作发生错误时触发。\r\n      reader.onerror = (error) => {\r\n        reject(error)\r\n      }\r\n      //处理load事件。该事件在读取操作完成时触发\r\n      reader.onload = () => {\r\n        imgResult = reader.result\r\n      }\r\n      //处理loadend事件。该事件在读取操作结束时（要么成功，要么失败）触发。\r\n      reader.onloadend = () => {\r\n        resolve(imgResult)\r\n      }\r\n    })\r\n  },\r\n\r\n  /**\r\n * 弹出提示信息\r\n * @param {String} str  //提示的文字\r\n * @param {String} type //提示类型\r\n * @param {Number} time //展示时间\r\n */\r\n  elMessageBox: (str, type, time, onlyOne = false) => {\r\n    if (onlyOne && document.getElementsByClassName(`el-message--${type}`).length) return;\r\n    Message({\r\n      message: str,\r\n      type: type,\r\n      duration: time || 3000,\r\n      offset: 100 //距离顶部\r\n    });\r\n  },\r\n\r\n  getDate: (dateTimeStamp) => {\r\n    if (dateTimeStamp == undefined) {\r\n      return false;\r\n    } else {\r\n      let date = new Date(dateTimeStamp)\r\n      //dateTimeStamp 的 时间戳\r\n      let time = Date.UTC(\r\n        date.getUTCFullYear(),\r\n        date.getUTCMonth(),\r\n        date.getUTCDate(),\r\n        date.getUTCHours(),\r\n        date.getUTCMinutes(),\r\n        date.getUTCSeconds()\r\n      );\r\n      var now = new Date().getTime();//获取当前时间的时间戳\r\n\r\n      let daytime = 24 * 60 * 60 * 1000; //一天的时间\r\n      let hourtime = 60 * 60 * 1000; //一小时的时间\r\n      let mintime = 60 * 1000; //一分钟的时间\r\n      let sectime = 1000  //一秒钟的时间\r\n\r\n      var diffValue = now - time;\r\n\r\n      var dayT = diffValue / daytime;\r\n      var hourT = diffValue / hourtime;\r\n      var minT = diffValue / mintime;\r\n      var secT = diffValue / sectime;\r\n\r\n      if (dayT >= 1) {\r\n        return (parseInt(dayT) + \"天前\")\r\n      }\r\n      else if (hourT >= 1) {\r\n        return (parseInt(hourT) + \"个小时前\")\r\n      }\r\n      else if (minT >= 1) {\r\n        return (parseInt(minT) + \"分钟前\")\r\n      } else if (secT >= 1 || secT <= 20) {\r\n        return (\"刚刚\")\r\n      } else {\r\n        return (parseInt(secT) + \"秒前\")\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 转换为某分某时某天\r\n   * @param {utc时间格式} dateTimeStamp \r\n   * @returns 某分某时某天等\r\n   */\r\n  timeToDate: (dateTimeStamp) => {\r\n    if (dateTimeStamp == undefined) {\r\n      return '';\r\n    } else {\r\n      let date = new Date(dateTimeStamp)\r\n      //dateTimeStamp 的 时间戳\r\n      let utctime = Date.UTC(\r\n        date.getUTCFullYear(),\r\n        date.getUTCMonth(),\r\n        date.getUTCDate(),\r\n        date.getUTCHours(),\r\n        date.getUTCMinutes(),\r\n        date.getUTCSeconds()\r\n      );\r\n      let time = new Date(utctime)\r\n      let Y = time.getFullYear() + '-';\r\n      let M = (time.getMonth() + 1 < 10 ? '0' + (time.getMonth() + 1) : time.getMonth() + 1) + '-';\r\n      let D = (time.getDate() < 10 ? '0' + time.getDate() : time.getDate()) + ' ';\r\n      let h = (time.getHours() < 10 ? '0' + time.getHours() : time.getHours()) + ':';\r\n      let m = (time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes()) + ':';\r\n      let s = (time.getSeconds() < 10 ? '0' + time.getSeconds() : time.getSeconds());\r\n      return Y + M + D + h + m + s;\r\n    }\r\n  },\r\n\r\n  getUserId: () => {\r\n    if (!store.getters.getToken) return null;\r\n    let userId = localStorage.getItem(\"id\")\r\n    if (!userId) {\r\n      return null;\r\n    }\r\n    return JSON.parse(userId)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"]}]}